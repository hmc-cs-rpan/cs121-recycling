items_by_category = JSON.parse(
  '<%= raw Category.order(:name).map { |category| [category.id, category.items.order(:name)] }.to_h.to_json %>'
)

@init_smooth_scrolling = ->
  # Smooth Scroll on clicking nav items
  $('nav a').click ->
    $href = $(this).attr('href')
    $('body').stop().animate { scrollTop: $($href).offset().top }, 1000
    false
  # back to top
  $('#toTop a').click ->
    $('body').animate { scrollTop: 0 }, 1000
    false
  # Parallaxing + add class active on scroll
  $(document).scroll ->
    # parallaxing
    $movebg = $(window).scrollTop() * -0.3
    $('.portion').css 'background-positionY', $movebg + 'px'
    # add class active to nav a on scroll
    scrollPos = $(document).scrollTop() + 100
    $('nav a').each ->
      currLink = $(this)
      refElement = $(currLink.attr('href'))
      if refElement.position().top <= scrollPos and refElement.position().top + refElement.height() > scrollPos
        $('nav a').removeClass 'active'
        currLink.addClass 'active'
      return
    # changing padding of nav a on scroll
    if scrollPos > 250
      $('nav a').addClass 'small'
      $('nav img').addClass 'move'
      $('nav span').removeClass 'movetext'
    else
      $('nav a').removeClass 'small'
      $('nav img').removeClass 'move'
      $('nav span').addClass 'movetext'
    return

###
Display only items belonging to the given category in the items picker.
###
@filter_by_category = (category_id) ->
  btn = $('#category' + category_id)[0]
  if btn.className.split(' ').includes('active')
    # We're already filtering by this category
    return
  clear_items()
  append_items_by_category category_id
  btn.className += ' active'
  return


###
Display all items from all categories in the items picker.
###
@display_all_items = ->
  btn = $('#all_categories')[0]
  if btn.className.split(' ').includes('active')
    # We're already displaying all items
    return
  clear_items()
  for category_id of items_by_category
    append_items_by_category category_id
  toggle_active btn
  return

###
Set or unset (based on value of select) active class on all the Items within a category
###
@select_all = (select) ->
  items = $('#items')[0]
  buttons = Array.from(items.children)
  buttons.forEach (button) ->
    if is_active(button) != select
      toggle_active button
    return
  return

is_active = (elem) ->
  elem.className.split(' ').includes 'active'

###
Remove all items from the items picker.
###
clear_items = ->
  items = $('#items')[0]
  while items.firstChild
    items.removeChild items.firstChild
  # Unselect the category filter button
  categories = $('#categories')[0]
  buttons = Array.from(categories.children)
  buttons.forEach (button) ->
    button.className = button.className.split(' ').filter((className) ->
      className != 'active'
    ).join(' ')
    return
  return

###
Append all items from the given category to the items picker.
###
append_items_by_category = (category_id) ->
  items = $('#items')[0]
  items_by_category[category_id].forEach (item) ->
    items.appendChild create_button(item.name)
    return
  return

###
Helper function to create a button for each JS Item
###
create_button = (name) ->
  list_item = document.createElement('li')
  list_item.className = 'list-group-item btn btn-default'
  list_item.appendChild document.createTextNode(name)

  list_item.onclick = ->
    toggle_active list_item
    return

  list_item

toggle_active = (elem) ->
  if elem.className.split(' ').includes('active')
    elem.className = elem.className.split(' ').filter((className) ->
      className != 'active'
    ).join(' ')
  else
    elem.className += ' active'
  return
